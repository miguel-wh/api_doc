openapi: 3.0.0
servers:
  - url: //subdomain.adminolt.com/api
    description: Default server
info:
  description: |
    This is a sample server Petstore server.
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
    For this sample, you can use the api key `special-key` to test the authorization filters.
    # Introduction
    This API is documented
  version: 1.0.0
  title: Api AdminOLT
  termsOfService: 'https://adminolt.com/documentacion/terminos-y-condiciones-de-uso-5/'
  contact:
    name: API Support AdminOLT
    email: apiteam@adminolt.com
    url: https://adminolt.com/
  x-logo:
    url: 'https://admin.adminolt.com/static/img/logo.84639b0d929a.png'
    altText: AdminOLT logo
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: 'https://github.com/Rebilly/generator-openapi-repo'
tags:
  - name: ONUs
    description: Everything about your ONUs
  - name: OLTs
    description: Everything about your OLTs
  - name: Zones
    description: Everything about your Zones
  - name: Maps
    description: Everything about you Maps
x-tagGroups:
  - name: ONU
    tags:
      - ONUs

  - name: OLT
    tags:
      - OLTs

  - name: System
    tags:
      - Zones
      - Maps
paths:
  ## All about System
  # ZONES
  /zones/:
    get:
      $ref: 'sistema/paths/zones/get.yaml'
    post:
      $ref: 'sistema/paths/zones/post.yaml'
  '/zones/{zone_id}/':
    get:
      $ref: 'sistema/paths/zones/detail_zone.yaml'
    put:
      $ref: 'sistema/paths/zones/put.yaml'
    delete:
      $ref: 'sistema/paths/zones/delete.yaml'
  # Maps
  /list-maps/:
    get:
      $ref: 'sistema/paths/maps/get_list_maps.yaml'
  /map/<int:id_map>/:
    get:
      $ref: 'sistema/paths/maps/get_map_by_id.yaml'
  /list-markers/<int:id_map>/:
    get:
      $ref: 'sistema/paths/maps/get_list_of_markers_of_map_by_id.yaml'

  # All about OLTs
  /olt-list/:
    get:
      $ref: 'olt/paths/list_olts.yaml'

  # All about ONUs
  /onu/unauthorized/:
    get:
      $ref: 'onu/paths/list_unauthorized_onu.yaml'
  /onus/authorized-by-sn/<str:sn>/:
    get:
      $ref: 'onu/paths/get_authorized-by-sn.yaml'
  /onu/olt-rx-signal/<int:id_onu>/:
    get:
      $ref: 'onu/paths/get_signal_authorized_onu.yaml'
  /info-onu-authorized/run-status-onu/<int:id_onu>/:
    get:
      $ref: 'onu/paths/get_status_authorized_onu.yaml'

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    ## System
    # Zones
    ZoneRequest:
      $ref: 'sistema/components/zones/zone_request.yaml'
    ZoneResponse:
      $ref: 'sistema/components/zones/zone_response.yaml'
    ZoneRequestUpdate:
      $ref: 'sistema/components/zones/zone_request_update.yaml'
    ZoneResponseUpdate:
      $ref: 'sistema/components/zones/zone_response_update.yaml'
    # Maps
    GetAllListMaps:
      $ref: 'sistema/components/maps/list-maps_response.yaml'
    GetMapByIdResponse:
      $ref: 'sistema/components/maps/get_map_by_id_response.yaml'
    GetListMarkersMapByIdResponse:
      $ref: 'sistema/components/maps/get_list_of_markers_of_map_by_id_response.yaml'
    #OLTs
    OLTRequest:
      $ref: 'olt/components/olt_request.yaml'
    OLTResponse:
      $ref: 'olt/components/olt_response.yaml'
    # ONUs
    OnuUnauthorizedRequest:
      $ref: 'onu/components/list_unauthorized_onu_request.yaml'
    OnuUnauthorizedResponse:
      $ref: 'onu/components/list_unauthorized_onu_response.yaml'
    OnuUnauthorizedResponseWS:
      $ref: 'onu/components/list_unauthorized_onu_response_ws.yaml'
    GetOnuBySnResponse:
      $ref: 'onu/components/get_authorized-by-sn_response.yaml'
    GetSignalAuthorizedOnu:
      $ref: 'onu/components/get_signal_of_onu_response.yaml'
    GetStatusAuthorizedOnu:
      $ref: 'onu/components/get_status_authorized_onu_respose.yaml'
  requestBodies:
    ZoneRequest:
      content:
        application/json:
          schema:
            allOf:
              - description: My Zone
                title: Zone
              - $ref: '#/components/schemas/ZoneRequest'
      description: Zone object that needs to be added to the system
      required: true
    ZoneRequestUpdate:
      content:
        application/json:
          schema:
            allOf:
              - description: My Zone
                title: Zone
              - $ref: '#/components/schemas/ZoneRequest'
      description: Zone object that needs to be update to the system
      required: true