openapi: 3.0.0
servers:
  - url: //subdomain.adminolt.com/api
    description: Default server
info:
  description: |
    This is a sample server Petstore server.
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
    For this sample, you can use the api key `special-key` to test the authorization filters.
    # Introduction
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).
    # OpenAPI Specification
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).
    # Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
    And that allows cross-domain communication from the browser.
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
  version: 1.0.0
  title: Api AdminOLT
  termsOfService: 'https://adminolt.com/documentacion/terminos-y-condiciones-de-uso-5/'
  contact:
    name: API Support AdminOLT
    email: apiteam@adminolt.com
    url: https://adminolt.com/
  x-logo:
    url: 'https://admin.adminolt.com/static/img/logo.84639b0d929a.png'
    altText: AdminOLT logo
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: 'https://github.com/Rebilly/generator-openapi-repo'
tags:
  - name: Zones
    description: Everything about your Zones
  - name: OLT
    description: Everything about your OLTs
x-tagGroups:
  - name: OLT
    tags:
      - Zones
      - OLT
  - name: General
    tags:
      - pet
      - store
  - name: User Management
    tags:
      - user
  
paths:
  /zones/:
    get:
      $ref: 'sistema/paths/zones/get.yaml'
    post:
      $ref: 'sistema/paths/zones/post.yaml'
  '/zones/{zone_id}/':
    get:
      $ref: 'sistema/paths/zones/detail_zone.yaml'
    put:
      $ref: 'sistema/paths/zones/put.yaml'
    delete:
      $ref: 'sistema/paths/zones/delete.yaml'
  /olt-list/:
    get:
      $ref: 'sistema/paths/olt/get.yaml'

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    ZoneRequest:
      $ref: 'sistema/components/zones/zone_request.yaml'
    ZoneResponse:
      $ref: 'sistema/components/zones/zone_response.yaml'
    ZoneRequestUpdate:
      $ref: 'sistema/components/zones/zone_request_update.yaml'
    ZoneResponseUpdate:
      $ref: 'sistema/components/zones/zone_response_update.yaml'
    OLTRequest:
      $ref: 'sistema/components/olt/olt_request.yaml'
    OLTResponse:
      $ref: 'sistema/components/olt/olt_response.yaml'
  requestBodies:
    ZoneRequest:
      content:
        application/json:
          schema:
            allOf:
              - description: My Zone
                title: Zone
              - $ref: '#/components/schemas/ZoneRequest'
      description: Zone object that needs to be added to the system
      required: true
    ZoneRequestUpdate:
      content:
        application/json:
          schema:
            allOf:
              - description: My Zone
                title: Zone
              - $ref: '#/components/schemas/ZoneRequest'
      description: Zone object that needs to be update to the system
      required: true
