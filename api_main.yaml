openapi: 3.0.0
servers:
  - url: //subdomain.adminolt.com/api
    description: Default server
info:
  $ref: 'description_main.yaml'

  version: 1.0.0
  title: Api AdminOLT
  termsOfService: 'https://adminolt.com/documentacion/terminos-y-condiciones-de-uso-5/'
  contact:
    name: API Support AdminOLT
    email: apiteam@adminolt.com
    url: https://adminolt.com/
  x-logo:
    url: 'https://admin.adminolt.com/static/img/logo.84639b0d929a.png'
    altText: AdminOLT logo
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: 'https://github.com/Rebilly/generator-openapi-repo'

### SECTIONS ENDPOINTS ###
tags:
  - name: ONUs
    description: Everything about your ONUs
  - name: OLTs
    description: Everything about your OLTs
  - name: Zones
    description: Everything about your Zones
  - name: Maps
    description: Everything about you Maps
  - name: NAP
  - name: Speed Plans
x-tagGroups:
  - name: ONU
    tags:
      - ONUs

  - name: OLT
    tags:
      - OLTs

  - name: System
    tags:
      - Zones
      - Maps
      - NAP
      - Speed Plans

### URLS - ENDPOINTS ####
paths:
  ## All about System
  # ZONES
  /zones/:
    get:
      $ref: 'sistema/paths/zones/get.yaml'
    post:
      $ref: 'sistema/paths/zones/post.yaml'
  '/zones/{zone_id}/':
    get:
      $ref: 'sistema/paths/zones/detail_zone.yaml'
    put:
      $ref: 'sistema/paths/zones/put.yaml'
    delete:
      $ref: 'sistema/paths/zones/delete.yaml'
  # Maps
  /list-maps/:
    get:
      $ref: 'sistema/paths/maps/get_list_maps.yaml'
  /map/<int:id_map>/:
    get:
      $ref: 'sistema/paths/maps/get_map_by_id.yaml'
  /list-markers/<int:id_map>/:
    get:
      $ref: 'sistema/paths/maps/get_list_of_markers_of_map_by_id.yaml'

  # NAP
  /naps/:
    get:
      $ref: 'sistema/paths/nap/get_naps_list.yaml'

  # Speed Plans
  /speedprofiles/download/:
    get:
      $ref: 'sistema/paths/speed_plans/speedprofiles_download.yaml'
  /speedprofiles/upload/:
    get:
      $ref: 'sistema/paths/speed_plans/speedprofiles_upload.yaml'

  # All about OLTs
  /olt-list/:
    get:
      $ref: 'olt/paths/list_olts.yaml'
  /vlans/<int:olt_id>/:
    get:
      $ref: 'olt/paths/get_vlans_list.yaml'
  /olt/line-profiles/<int:olt_id>/:
    get:
      $ref: 'olt/paths/get_line_profiles_list.yaml'
  /example-users/:
    get:
      $ref: 'olt/paths/users_list.yaml'

  # All about ONUs
  # GET
  /onu/unauthorized/:
    get:
      $ref: 'onu/paths/list_unauthorized_onu.yaml'
  /onus/authorized-by-sn/<str:sn>/:
    get:
      $ref: 'onu/paths/get_authorized-by-sn.yaml'
  /onu/olt-rx-signal/<int:id_onu>/:
    get:
      $ref: 'onu/paths/get_signal_authorized_onu.yaml'
  /info-onu-authorized/run-status-onu/<int:id_onu>/:
    get:
      $ref: 'onu/paths/get_status_authorized_onu.yaml'
  /onu-types/:
    get:
      $ref: 'onu/paths/get_onu_types_list.yaml'
  # POST
  /onu/authorize/:
    $ref: 'onu/paths/post_onu_authorize.yaml'



### DEFINITION - RESPONSE OF ENDPOINT ###
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

    ## System
    # Zones
    ZoneRequest:
      $ref: 'sistema/components/zones/zone_request.yaml'
    ZoneResponse:
      $ref: 'sistema/components/zones/zone_response.yaml'
    ZoneRequestUpdate:
      $ref: 'sistema/components/zones/zone_request_update.yaml'
    ZoneResponseUpdate:
      $ref: 'sistema/components/zones/zone_response_update.yaml'
    # Maps
    GetAllListMaps:
      $ref: 'sistema/components/maps/list-maps_response.yaml'
    GetMapByIdResponse:
      $ref: 'sistema/components/maps/get_map_by_id_response.yaml'
    GetListMarkersMapByIdResponse:
      $ref: 'sistema/components/maps/get_list_of_markers_of_map_by_id_response.yaml'
    # NAP
    GetNapsList:
      $ref: 'sistema/components/nap/get_naps_list_response.yaml'
    # Speed Plans
    GetSpeedProfileDownloadResponse:
      $ref: 'sistema/components/speed_plans/speedprofiles_download_response.yaml'
    GetSpeedProfileUploadResponse:
      $ref: 'sistema/components/speed_plans/speedprofiles_upload_response.yaml'

    ## OLTs
    OLTRequest:
      $ref: 'olt/components/olt_request.yaml'
    OLTResponse:
      $ref: 'olt/components/olt_response.yaml'
    VlansListResponse101:
      $ref: 'olt/components/get_vlans_response_101.yaml'
    LineProfilesResponse:
      $ref: 'olt/components/get_line_profiles_response.yaml'

    User: # Schema EXAMPLE TEST ARRAY OF OBJECTS ANONYMUS
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          nombre:
            type: string
      example:
      - id: 10
        name: miguel
      - id: 11
        name: angel
      

    ## ONUs
    OnuUnauthorizedRequest:
      $ref: 'onu/components/list_unauthorized_onu_request.yaml'
    OnuUnauthorizedResponse:
      $ref: 'onu/components/list_unauthorized_onu_response.yaml'
    OnuUnauthorizedResponseWS:
      $ref: 'onu/components/list_unauthorized_onu_response_ws.yaml'
    GetOnuBySnResponse:
      $ref: 'onu/components/get_authorized-by-sn_response.yaml'
    GetSignalAuthorizedOnu:
      $ref: 'onu/components/get_signal_of_onu_response.yaml'
    GetStatusAuthorizedOnu:
      $ref: 'onu/components/get_status_authorized_onu_respose.yaml'
    SignalOnuAuthorizedResponse101:
      $ref: 'onu/components/get_signal_of_onu_response_101.yaml'
    StatusOnuAuthorizedResponse101:
      $ref: 'onu/components/get_status_of_onu_response_101.yaml'
    OnuTypesResponse:
      $ref: 'onu/components/get_onu_types_list_response.yaml'
  requestBodies:
    ZoneRequest:
      content:
        application/json:
          schema:
            allOf:
              - description: My Zone
                title: Zone
              - $ref: '#/components/schemas/ZoneRequest'
      description: Zone object that needs to be added to the system
      required: true
    ZoneRequestUpdate:
      content:
        application/json:
          schema:
            allOf:
              - description: My Zone
                title: Zone
              - $ref: '#/components/schemas/ZoneRequest'
      description: Zone object that needs to be update to the system
      required: true